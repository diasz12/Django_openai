import streamlit as st
from home.utils import Trascricao, gerar_resumo  # Importa as fun√ß√µes do Django
from django.conf import settings
import os

# Configura√ß√µes do Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
import django
django.setup()

from home.models import Video  # Importa o modelo Video do Django

# T√≠tulo da aplica√ß√£o
st.title("Transcri√ß√£o e Resumo de V√≠deos üé•")

# Formul√°rio para upload de v√≠deo
st.header("Envie seu v√≠deo")
titulo = st.text_input("T√≠tulo do v√≠deo", placeholder="Digite o t√≠tulo do v√≠deo")
custom_prompt = st.text_area("Prompt personalizado", placeholder="Digite seu prompt personalizado")
video_file = st.file_uploader("Fa√ßa o upload do v√≠deo", type=["mp4", "mov", "avi"])

# Bot√£o para processar o v√≠deo
if st.button("Processar"):
    if not video_file or not titulo or not custom_prompt:
        st.error("Por favor, preencha todos os campos e envie um v√≠deo.")
    else:
        # Salva o v√≠deo no diret√≥rio "media/video"
        video_dir = "media/video"
        os.makedirs(video_dir, exist_ok=True)  # Cria o diret√≥rio, se n√£o existir
        video_path = os.path.join(video_dir, video_file.name)

        # Salva o arquivo enviado pelo usu√°rio
        with open(video_path, "wb") as f:
            f.write(video_file.read())

        # Verifica se o arquivo foi salvo corretamente
        if not os.path.exists(video_path):
            st.error(f"O arquivo de v√≠deo n√£o foi encontrado no caminho: {video_path}")
        else:
            st.success(f"Arquivo salvo em: {video_path}")

        # Processa o v√≠deo
        try:
            st.info("Transcrevendo o v√≠deo...")
            transcricao = Trascricao(video_path)
            transcript = transcricao.trascrever()

            st.info("Gerando o resumo...")
            resumo = gerar_resumo(transcript, custom_prompt)

            # Salva os resultados no banco de dados
            video_upload = Video(titulo=titulo, video=video_path, transcricao=transcript, resumo=resumo)
            video_upload.save()

            # Exibe o resumo
            st.success("Processamento conclu√≠do!")
            st.subheader("Resumo gerado:")
            st.write(resumo)
        except Exception as e:
            st.error(f"Erro ao processar o v√≠deo: {e}")

# Exibe os v√≠deos processados anteriormente
st.header("Hist√≥rico de v√≠deos")
videos = Video.objects.all().order_by('-id')[:5]  # Mostra os √∫ltimos 5 v√≠deos
for video in videos:
    st.subheader(video.titulo)
    st.write(f"Resumo: {video.resumo}")
    st.write("---")